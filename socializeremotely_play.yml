---
#
# assumes common_play.yml AND playremote_play.yml already applied to all involved inventory
#


- hosts: '{{ target_hosts | default("tag_service_socializeremotely", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
    local_users:
      - name: '{{ service_name }}'
        groups: ['{{ hxjwt_shared }}']
        authorized: []

  vars_files:
    - vars/common_vars.yml
    - vars/socializeremotely_vars.yml

  tasks:
    - include_role:
        name: external/nmaekawa.apt
      vars:
        apt_other_packages: "{{ apt_required_packages_socializeremotely }}"

    - include_role:
        name: external/Stouts.users
      vars:
        users_users: '{{ local_users }}'

    - name: setup to install node from NodeSource
      shell: 'curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -'

    - name: install node from NodeSource
      apt:
        name: nodejs
        state: present

    - name: install pm2 process manager
      npm:
        name: pm2
        global: yes
        state: latest


- hosts: '{{ target_hosts | default("tag_service_socializeremotely", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars_files:
      - vars/common_vars.yml
      - vars/socializeremotely_vars.yml
  handlers:
    - include_tasks: handlers/main.yml

  tasks:
    - name: create dirs
      include_tasks: 'roles/webapp_install/tasks/create_dirs.yml'

    - name: create .ssh dir
      file:
        path: '/home/{{ service_user }}/.ssh'
        owner: '{{ service_user }}'
        group: '{{ service_group }}'
        mode: '0700'
        state: directory

    - name: add private key for service user
      copy:
        src: '{{ local_certs_dir }}/{{ cert_dns }}/{{ service_name }}_deploy'
        dest: '/home/{{ service_user }}/.ssh/id_rsa'
        owner: '{{ service_user }}'
        group: '{{ service_group }}'
        mode: '0600'

    - name:  clone service repo with deploy key
      become_user: '{{ service_user }}'
      git:
          repo: '{{ service_git_repo }}'
          update: yes
          clone: yes
          force: yes
          version: '{{ service_git_revision }}'
          dest: '{{ service_install_dir }}'
          key_file: '/home/{{ service_user }}/.ssh/id_rsa'
          accept_hostkey: yes

    - name: install service dependencies
      become_user: '{{ service_user }}'
      npm:
        path: '{{ service_install_dir }}/{{ service_name }}'
        state: present

    - name: copy and link certs for express app
      include_tasks: 'roles/nginx/tasks/copy_certs.yml'

      # file expected to be created in playremote_play.yml
    - name: read shared secret
      shell: 'cat {{ hxjwt_shared_private_path }}'
      register: shared_secret_result

    - debug:
        var: shared_secret_result

    - name: set shared secret in var
      set_fact:
          hxjwt_shared_secret: "{{ shared_secret_result.stdout }}"

    - name: config | drop .env file for express app
      template:
        src: 'roles/webapp_install/templates/service_dotenv.j2'
        dest: '{{ service_install_dir }}/.env'
        owner: '{{ service_user }}'
        group: '{{ service_group }}'
        mode: 0640
        backup: yes

    - name: config | drop pm2 ecosystem file
      become_user: '{{ service_user }}'
      template:
        src: 'roles/webapp_install/templates/ecosystem.config.js.j2'
        dest: '{{ service_install_dir }}/ecosystem.config.js'
        owner: '{{ service_user }}'
        group: '{{ service_group }}'
        mode: 0640
        backup: yes

    - name: build nuxt distribution
      become_user: '{{ service_user }}'
      command:
        cmd: 'npm run build'
        chdir: '{{ service_install_dir }}'

    - name: pm2 start node app
      shell: 'pm2 start {{ service_install_dir }}/ecosystem.config.js --env "production"; pm2 save'

    - name: pm2 register as systemd service
      command: 'pm2 startup systemd'


